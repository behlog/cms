// <auto-generated />
using System;
using Behlog.Cms.EntityFrameworkCore.SQLite;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Behlog.Cms.EntityFrameworkCore.SQLite.Migrations
{
    [DbContext(typeof(BehlogSQLiteDbContext))]
    partial class BehlogSQLiteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("Behlog.Cms.Domain.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AuthorName")
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("AuthorUserId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<int>("BodyType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(1);

                    b.Property<Guid>("ContentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedByIp")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedByUserId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastStatusChangedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastUpdatedByIp")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastUpdatedByUserId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<string>("Title")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("WebUrl")
                        .HasMaxLength(2000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ContentId");

                    b.ToTable("Comment", (string)null);
                });

            modelBuilder.Entity("Behlog.Cms.Domain.Component", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Attributes")
                        .HasColumnType("nTEXT");

                    b.Property<string>("Author")
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("AuthorEmail")
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("ComponentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedByIp")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedByUserId")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsRtl")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Keywords")
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LangId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastUpdatedByIp")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastUpdatedByUserId")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("ViewPath")
                        .HasMaxLength(2000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("WebsiteId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LangId");

                    b.HasIndex("WebsiteId");

                    b.ToTable("Component", (string)null);
                });

            modelBuilder.Entity("Behlog.Cms.Domain.Content", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AltTitle")
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("AuthorUserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Body")
                        .IsUnicode(true)
                        .HasColumnType("nTEXT");

                    b.Property<int>("BodyType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(1);

                    b.Property<Guid>("ContentTypeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedByIp")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedByUserId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("IconName")
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("LangCode")
                        .HasMaxLength(10)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LangId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastStatusChangedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastUpdatedByIp")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastUpdatedByUserId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderNum")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("PublishDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<string>("Summary")
                        .HasMaxLength(2000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("ViewPath")
                        .HasMaxLength(2000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("WebsiteId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ContentTypeId");

                    b.HasIndex("LangId");

                    b.ToTable("Content", (string)null);
                });

            modelBuilder.Entity("Behlog.Cms.Domain.ContentCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AltTitle")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ContentTypeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedByIp")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedByUserId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LangId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastStatusChangedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastUpdatedByIp")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastUpdatedByUserId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("WebsiteId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ContentTypeId");

                    b.HasIndex("LangId");

                    b.HasIndex("WebsiteId");

                    b.ToTable("ContentCategory", (string)null);
                });

            modelBuilder.Entity("Behlog.Cms.Domain.ContentCategoryItem", b =>
                {
                    b.Property<Guid>("ContentId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("TEXT");

                    b.HasKey("ContentId", "CategoryId");

                    b.ToTable("ContentCategoryItem", (string)null);
                });

            modelBuilder.Entity("Behlog.Cms.Domain.ContentTag", b =>
                {
                    b.Property<Guid>("ContentId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TagId")
                        .HasColumnType("TEXT");

                    b.HasKey("ContentId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ContentTag", (string)null);
                });

            modelBuilder.Entity("Behlog.Cms.Domain.ContentType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LangId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastStatusChangedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(1);

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LangId");

                    b.ToTable("ContentType", (string)null);
                });

            modelBuilder.Entity("Behlog.Cms.Domain.FileUpload", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AltTitle")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("AlternateFilePath")
                        .HasMaxLength(2000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedByIp")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedByUserId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("Extension")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .HasMaxLength(2000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<long>("FileSize")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FileType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("LastStatusChangedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastUpdatedByIp")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastUpdatedByUserId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<string>("Title")
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasMaxLength(4000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("WebsiteId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WebsiteId");

                    b.ToTable("FileUpload", (string)null);
                });

            modelBuilder.Entity("Behlog.Cms.Domain.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("IsoCode")
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Language", (string)null);
                });

            modelBuilder.Entity("Behlog.Cms.Domain.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedByIp")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedByUserId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("LangId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LangId");

                    b.ToTable("Tag", (string)null);
                });

            modelBuilder.Entity("Behlog.Cms.Domain.Website", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("CopyrightText")
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DefaultLangId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(2000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Keywords")
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastStatusChangedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastUpdatedByIp")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastUpdatedByUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerUserId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(2);

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("default");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasMaxLength(2000)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Website", (string)null);
                });

            modelBuilder.Entity("Behlog.Cms.Domain.Comment", b =>
                {
                    b.HasOne("Behlog.Cms.Domain.Content", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Content");
                });

            modelBuilder.Entity("Behlog.Cms.Domain.Component", b =>
                {
                    b.HasOne("Behlog.Cms.Domain.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Behlog.Cms.Domain.Website", "Website")
                        .WithMany()
                        .HasForeignKey("WebsiteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsMany("Behlog.Cms.Domain.ComponentMeta", "Meta", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Category")
                                .HasMaxLength(256)
                                .IsUnicode(true)
                                .HasColumnType("TEXT");

                            b1.Property<string>("Description")
                                .HasMaxLength(2000)
                                .IsUnicode(true)
                                .HasColumnType("TEXT");

                            b1.Property<int>("Index")
                                .HasColumnType("INTEGER")
                                .HasColumnName("IndexNumber");

                            b1.Property<Guid?>("LangId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("MetaKey")
                                .IsRequired()
                                .HasMaxLength(256)
                                .IsUnicode(true)
                                .HasColumnType("TEXT");

                            b1.Property<string>("MetaType")
                                .HasColumnType("TEXT");

                            b1.Property<string>("MetaValue")
                                .HasMaxLength(4000)
                                .IsUnicode(true)
                                .HasColumnType("TEXT");

                            b1.Property<int>("OrderNum")
                                .HasColumnType("INTEGER");

                            b1.Property<Guid>("OwnerId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Status")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER")
                                .HasDefaultValue(1);

                            b1.Property<string>("Title")
                                .HasMaxLength(256)
                                .IsUnicode(true)
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("ComponentMeta", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.Navigation("Language");

                    b.Navigation("Meta");

                    b.Navigation("Website");
                });

            modelBuilder.Entity("Behlog.Cms.Domain.Content", b =>
                {
                    b.HasOne("Behlog.Cms.Domain.ContentType", "ContentType")
                        .WithMany()
                        .HasForeignKey("ContentTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Behlog.Cms.Domain.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsMany("Behlog.Cms.Domain.ContentComponent", "Components", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<Guid>("ComponentId")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("ContentId")
                                .HasColumnType("TEXT");

                            b1.Property<bool>("IsRtl")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER")
                                .HasDefaultValue(false);

                            b1.Property<int>("OrderNum")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Params")
                                .HasMaxLength(4000)
                                .IsUnicode(true)
                                .HasColumnType("TEXT");

                            b1.Property<int>("Status")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER")
                                .HasDefaultValue(1);

                            b1.Property<string>("ViewPath")
                                .HasMaxLength(2000)
                                .IsUnicode(true)
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("ComponentId");

                            b1.HasIndex("ContentId");

                            b1.ToTable("ContentComponent", (string)null);

                            b1.HasOne("Behlog.Cms.Domain.Component", "Component")
                                .WithMany()
                                .HasForeignKey("ComponentId")
                                .OnDelete(DeleteBehavior.Restrict)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("ContentId");

                            b1.Navigation("Component");
                        });

                    b.OwnsMany("Behlog.Cms.Domain.ContentFile", "Files", b1 =>
                        {
                            b1.Property<Guid>("ContentId")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("FileId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Description")
                                .HasMaxLength(2000)
                                .IsUnicode(true)
                                .HasColumnType("TEXT");

                            b1.Property<string>("FileName")
                                .IsRequired()
                                .HasMaxLength(2000)
                                .IsUnicode(true)
                                .HasColumnType("TEXT");

                            b1.Property<string>("Title")
                                .HasMaxLength(1000)
                                .IsUnicode(true)
                                .HasColumnType("TEXT");

                            b1.HasKey("ContentId", "FileId");

                            b1.HasIndex("FileId");

                            b1.ToTable("ContentFile", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ContentId");

                            b1.HasOne("Behlog.Cms.Domain.FileUpload", "File")
                                .WithMany()
                                .HasForeignKey("FileId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.Navigation("File");
                        });

                    b.OwnsMany("Behlog.Cms.Domain.ContentLike", "Likes", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<Guid>("ContentId")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("CreatedDate")
                                .HasColumnType("TEXT");

                            b1.Property<string>("IpAddress")
                                .HasMaxLength(100)
                                .HasColumnType("TEXT");

                            b1.Property<string>("SessionId")
                                .HasMaxLength(256)
                                .HasColumnType("TEXT");

                            b1.Property<string>("UserId")
                                .HasMaxLength(100)
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("ContentId");

                            b1.ToTable("ContentLike", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ContentId");
                        });

                    b.OwnsMany("Behlog.Cms.Domain.ContentMeta", "Meta", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Category")
                                .HasMaxLength(256)
                                .IsUnicode(true)
                                .HasColumnType("TEXT");

                            b1.Property<string>("Description")
                                .HasMaxLength(2000)
                                .IsUnicode(true)
                                .HasColumnType("TEXT");

                            b1.Property<Guid?>("LangId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("MetaKey")
                                .IsRequired()
                                .HasMaxLength(256)
                                .IsUnicode(true)
                                .HasColumnType("TEXT");

                            b1.Property<string>("MetaType")
                                .HasColumnType("TEXT");

                            b1.Property<string>("MetaValue")
                                .HasMaxLength(4000)
                                .IsUnicode(true)
                                .HasColumnType("TEXT");

                            b1.Property<int>("OrderNum")
                                .HasColumnType("INTEGER");

                            b1.Property<Guid>("OwnerId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Status")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER")
                                .HasDefaultValue(1);

                            b1.Property<string>("Title")
                                .HasMaxLength(256)
                                .IsUnicode(true)
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("ContentMeta", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.Navigation("Components");

                    b.Navigation("ContentType");

                    b.Navigation("Files");

                    b.Navigation("Language");

                    b.Navigation("Likes");

                    b.Navigation("Meta");
                });

            modelBuilder.Entity("Behlog.Cms.Domain.ContentCategory", b =>
                {
                    b.HasOne("Behlog.Cms.Domain.ContentType", "ContentType")
                        .WithMany()
                        .HasForeignKey("ContentTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Behlog.Cms.Domain.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Behlog.Cms.Domain.Website", "Website")
                        .WithMany()
                        .HasForeignKey("WebsiteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ContentType");

                    b.Navigation("Language");

                    b.Navigation("Website");
                });

            modelBuilder.Entity("Behlog.Cms.Domain.ContentCategoryItem", b =>
                {
                    b.HasOne("Behlog.Cms.Domain.Content", "Content")
                        .WithMany("Categories")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Behlog.Cms.Domain.ContentCategory", "Category")
                        .WithMany("Contents")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Content");
                });

            modelBuilder.Entity("Behlog.Cms.Domain.ContentTag", b =>
                {
                    b.HasOne("Behlog.Cms.Domain.Content", "Content")
                        .WithMany("Tags")
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Behlog.Cms.Domain.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Content");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Behlog.Cms.Domain.ContentType", b =>
                {
                    b.HasOne("Behlog.Cms.Domain.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Behlog.Cms.Domain.FileUpload", b =>
                {
                    b.HasOne("Behlog.Cms.Domain.Website", "Website")
                        .WithMany()
                        .HasForeignKey("WebsiteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Website");
                });

            modelBuilder.Entity("Behlog.Cms.Domain.Tag", b =>
                {
                    b.HasOne("Behlog.Cms.Domain.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LangId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Behlog.Cms.Domain.Website", b =>
                {
                    b.OwnsMany("Behlog.Cms.Domain.WebsiteMeta", "Meta", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Category")
                                .HasMaxLength(256)
                                .IsUnicode(true)
                                .HasColumnType("TEXT");

                            b1.Property<string>("Description")
                                .HasMaxLength(2000)
                                .IsUnicode(true)
                                .HasColumnType("TEXT");

                            b1.Property<Guid?>("LangId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("MetaKey")
                                .IsRequired()
                                .HasMaxLength(256)
                                .IsUnicode(true)
                                .HasColumnType("TEXT");

                            b1.Property<string>("MetaType")
                                .HasMaxLength(256)
                                .IsUnicode(true)
                                .HasColumnType("TEXT");

                            b1.Property<string>("MetaValue")
                                .HasMaxLength(4000)
                                .IsUnicode(true)
                                .HasColumnType("TEXT");

                            b1.Property<int>("OrderNum")
                                .HasColumnType("INTEGER");

                            b1.Property<Guid>("OwnerId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Status")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER")
                                .HasDefaultValue(1);

                            b1.Property<string>("Title")
                                .HasMaxLength(256)
                                .IsUnicode(true)
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("OwnerId");

                            b1.ToTable("WebsiteMeta", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("OwnerId");
                        });

                    b.Navigation("Meta");
                });

            modelBuilder.Entity("Behlog.Cms.Domain.Content", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("Behlog.Cms.Domain.ContentCategory", b =>
                {
                    b.Navigation("Contents");
                });
#pragma warning restore 612, 618
        }
    }
}
